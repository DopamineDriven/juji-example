/* c167b2b944a7a4676b7c592186ea2674442d6e36
 * This file is automatically generated by graphql-let. */

import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export declare type Maybe<T> = T | null;
export declare type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
/** All built-in and custom scalars, mapped to their actual values */
export declare type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
};
export declare type Query = {
    __typename?: 'Query';
    viewer: User;
};
export declare type User = {
    __typename?: 'User';
    id: Scalars['ID'];
    name: Scalars['String'];
    status: Scalars['String'];
};
export declare type PartialFragment = ({
    __typename?: 'User';
} & Pick<User, 'id' | 'name'>);
export declare const PartialFragmentDoc: import("@apollo/client").DocumentNode;
export declare const PartialFragmentDoc: DocumentNode<PartialFragment, unknown>;
